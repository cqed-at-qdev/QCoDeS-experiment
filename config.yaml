instruments:
  
  rs_vna_spec:
#    driver: qcodes.instrument_drivers.rohde_schwarz.ZNB
#    type: ZNB
#    auto_reconnect_instrument: true 
    driver: qdev_wrappers.customised_instruments.ZNB_ext
    type: ZNB_ext    
    address: TCPIP0::192.168.15.118::inst0::INSTR
    auto_reconnect_instrument: true
    init:
      S21: True
      spec_mode: True
      gen_address: 192.168.15.108
      timeout: 900
    parameters:
      S21.power:  {monitor: true}
      S21.start:  {monitor: true}
      S21.stop:  {monitor: true}
      S21.avg:  {monitor: true}
      S21.bandwidth:  {monitor: true}
      S21.npts:  {monitor: true}
      S21.status: {monitor: true}
#      SPEC.power:  {monitor: true}
#      SPEC.start:  {monitor: true}
#      SPEC.stop:  {monitor: true}
#      SPEC.avg:  {monitor: true}
#      SPEC.bandwidth:  {monitor: true}
#      SPEC.npts:  {monitor: true}
#      SPEC.status:  {monitor: true}
#      SPEC.readout_freq: {monitor: true}
#      SPEC.readout_power: {monitor: true}

  rs_vna:
#    driver: qcodes.instrument_drivers.rohde_schwarz.ZNB
#    type: ZNB
#    auto_reconnect_instrument: true 
    driver: qdev_wrappers.customised_instruments.ZNB_ext
    type: ZNB_ext    
    address: TCPIP0::192.168.15.118::inst0::INSTR
    auto_reconnect_instrument: true
    init:
      S21: True
      spec_mode: False
      timeout: 600
    parameters:
      S21.power:  {monitor: true}
      S21.start:  {monitor: true}
      S21.stop:  {monitor: true}
      S21.avg:  {monitor: true}
      S21.bandwidth:  {monitor: true}
      S21.npts:  {monitor: true}
      S21.status: {monitor: true}

      


  alazar: 
    #driver: qcodes.instrument_drivers.AlazarTech.ATS9360.AlazarTech_ATS9360
    type: qcodes.instrument_drivers.AlazarTech.ATS9360.AlazarTech_ATS9360
    enable_forced_reconnect: true
    
        #parameters:
      #clock_source: {initial_value: 'EXTERNAL_CLOCK_10MHz_REF'}
      #external_sample_rate: {initial_value: 500_000_000} # We normally use 500_000_000
      #coupling1: {initial_value: 'DC'}
      #coupling2: {initial_value: 'DC'}
      #trigger_operation: {initial_value: 'TRIG_ENGINE_OP_J'}
      #trigger_engine1: {initial_value: 'TRIG_ENGINE_J'}
      #trigger_source1: {initial_value: 'EXTERNAL'}
      #trigger_slope1: {initial_value: 'TRIG_SLOPE_POSITIVE'}
      #trigger_level1: {initial_value: 140}
      #trigger_source2: {initial_value: 'DISABLE'}
      #trigger_slope2: {initial_value: 'TRIG_SLOPE_POSITIVE'}
      #trigger_level2: {initial_value: 140}
      #external_trigger_coupling: {initial_value: 'DC'}
      #external_trigger_range: {initial_value: 'ETR_2V5'}
      #trigger_delay: {initial_value: 0}
      #timeout_ticks: {initial_value: 0}
      #aux_io_mode: {initial_value: AUX_IN_AUXILIARY}
      #aux_io_param: {initial_value: NONE}
      ##seq_mode: {monitor: false}
    

  tektronix_awg:
    driver: qcodes.instrument_drivers.tektronix.AWG5014
    type: Tektronix_AWG5014
    #address: TCPIP0::192.168.15.101::inst0::INSTR
    address: TCPIP0::192.168.15.113::inst0::INSTR
    auto_reconnect_instrument: true
    parameters:
      state: {monitor: true}
      ch1_amp: {monitor: true}
      ch1_state: {monitor: true}
      ch2_amp: {monitor: true}
      ch2_state: {monitor: true}
      ch3_amp: {monitor: true}
      ch3_state: {monitor: true}
      ch4_amp: {monitor: true}
      ch4_state: {monitor: true}
      ref_source: {initial_value: EXT}
      clock_source: {initial_value: INT}
      clock_freq: {initial_value: 1000000000}

  rs_localos:
    type: qcodes.instrument_drivers.rohde_schwarz.SGS100A.RohdeSchwarz_SGS100A
    init:
      address: 'TCPIP0::192.168.15.108::inst0::INSTR'
    force_close_existing_instrument: true
    parameters:
      status: {monitor: true}
      IQ_state: {monitor: true}
      pulsemod_state: {monitor: true}
      frequency: {monitor: true}
      power: {monitor: true}

  rs_pump:
    driver: qcodes.instrument_drivers.rohde_schwarz.SGS100A
    type: RohdeSchwarz_SGS100A
    address: TCPIP0::192.168.15.117::inst0::INSTR
    auto_reconnect_instrument: true
    parameters:
      frequency: {monitor: true}
      power: {monitor: true}
      status: {monitor: true}   
      pulsemod_state: {initial_value: false}
      pulsemod_source: {initial_value: EXT}
      ref_osc_source: {initial_value: EXT}
      ref_osc_external_freq: {initial_value: 10MHz}   

  rs_pump2:
    driver: qcodes.instrument_drivers.rohde_schwarz.SGS100A
    type: RohdeSchwarz_SGS100A
    address: TCPIP0::192.168.15.111::inst0::INSTR
    auto_reconnect_instrument: true
    parameters:
      frequency: {monitor: true}
      power: {monitor: true}
      status: {monitor: true}   
      pulsemod_state: {initial_value: false}
      pulsemod_source: {initial_value: EXT}
      ref_osc_source: {initial_value: EXT}
      ref_osc_external_freq: {initial_value: 10MHz} 

  rs_qubit:
    type: qcodes.instrument_drivers.rohde_schwarz.SGS100A.RohdeSchwarz_SGS100A
    init:
       address: 'TCPIP0::192.168.15.107::inst0::INSTR'
    auto_reconnect_instrument: true
    parameters:
      status: {monitor: true}
      IQ_state: {monitor: true}
      pulsemod_state: {monitor: true}
      frequency: {monitor: true}
      power: {monitor: true, label: Qubit Drive Power}
      
  rs_cavity:
    type: qcodes.instrument_drivers.rohde_schwarz.SGS100A.RohdeSchwarz_SGS100A
    init:
      address: 'TCPIP0::192.168.15.105::inst0::INSTR'
    force_close_existing_instrument: true
    parameters:
      status: {monitor: true}
      IQ_state: {monitor: true}
      pulsemod_state: {monitor: true}
      frequency: {monitor: true}
      power: {monitor: true}

  spec_help:
    driver: qcodes.instrument_drivers.rohde_schwarz.SGS100A
    type: RohdeSchwarz_SGS100A
    init:
      #address: 'TCPIP0::192.168.15.105::inst0::INSTR'
      address: 'TCPIP0::192.168.15.108::inst0::INSTR'
    force_close_existing_instrument: true
    parameters:
      status: {monitor: true}
      IQ_state: {monitor: true}
      pulsemod_state: {monitor: true}
      frequency: {monitor: true}
      power: {monitor: true}      

  awg5208:
    type: qcodes.instrument_drivers.tektronix.AWG5208.AWG5208
    enable_forced_reconnect: true
    init:
      address: 'TCPIP0::192.168.15.113::inst0::INSTR'
      timeout: 500
    parameters:
      clock_source: {initial_value: 'Internal, 10 MHZ ref.'}
      sample_rate: {initial_value: 2500000000}
      ch1.awg_amplitude: {initial_value: 1}
      ch2.awg_amplitude: {initial_value: 1}
      ch3.awg_amplitude: {initial_value: 1}
      ch4.awg_amplitude: {initial_value: 1}
      ch1.marker1_high: {initial_value: 1.75}
      ch1.marker2_high: {initial_value: 1.75}
      ch2.marker1_high: {initial_value: 1.75}
      ch2.marker2_high: {initial_value: 1.75}
      ch3.marker1_high: {initial_value: 1.75}
      ch3.marker2_high: {initial_value: 1.75}
      ch4.marker1_high: {initial_value: 1.75}
      ch4.marker2_high: {initial_value: 1.75}
      ch1.resolution: {initial_value: 14}
      ch2.resolution: {initial_value: 14}
      ch3.resolution: {initial_value: 14}
      ch4.resolution: {initial_value: 14}
      ch1.state: {initial_value: 1}
      ch2.state: {initial_value: 1}
      ch3.state: {initial_value: 1}
      ch4.state: {initial_value: 1}
      
  yoko:
    driver: local_instruments.GS200_local
    type: GS200_local
    address: GPIB0::12::INSTR
    auto_reconnect_instrument: true
    init:
      voltage_range: 10
    parameters:
      voltage:
        step: 0.1
        inter_delay: 1
        monitor: true
      output: {monitor: true}

  minicircuits_switch:
     #driver: qcodes.instrument_drivers.Minicircuits.USB_SPDT
     #driver: local_instruments.T2cust_USB_SPDT
     type: qcodes.instrument_drivers.Minicircuits.USB_SPDT.USB_SPDT
     auto_reconnect_instrument: true
     init:
       driver_path: A:\\Scripts\\local_instruments\\mcl_RF_Switch_Controller64
     parameters:
       a.switch: {monitor: true}
       b.switch: {monitor: true}
       c.switch: {monitor: true}
       d.switch: {monitor: true}

#  sh_spectrum_analyser:
#    driver: qdev_wrappers.customised_instruments.spectrum_analyser_ext
#    type: SpectrumAnalyser_ext
#    parameters:
#      sideband_frequency: {monitor: true}
#      carrier_frequency: {monitor: true}
#      frequency: {monitor: true}
#      span: {monitor: true}
#      avg: {monitor: true}
#      ref_lvl: {monitor: true}
      
  sh_spectrum_analyser:
    driver: qcodes.instrument_drivers.signal_hound.USB_SA124B
    type: SignalHound_USB_SA124B

  harvard_decadac:
    driver: qdev_wrappers.customised_instruments.Decadac_ext
    type: Decadac_ext
    address: ASRL4::INSTR
    enable_forced_reconnect: true
    init:
      min_val: -10
      max_val: 10
      terminator: \n
      timeout: 30
    parameters:
      slots.Slot0.channels.Chan0.fine_volt:
        alias: Q1
        label: Q1 gate
        step: 0.1
        inter_delay: 0.02
        monitor: true
      slots.Slot0.channels.Chan1.fine_volt:
        alias: Q2
        label: Q2 gate
        step: 0.1
        inter_delay: 0.02
        monitor: true
      slots.Slot1.channels.Chan0.fine_volt:
        alias: Q3
        label: Q3 gate
        step: 0.1
        inter_delay: 0.02
        monitor: true
      slots.Slot1.channels.Chan1.fine_volt:
        alias: Q4
        label: Q4 gate
        step: 0.1
        inter_delay: 0.02
        monitor: true
      slots.Slot2.channels.Chan0.fine_volt:
        alias: Q5
        label: Q5 gate
        step: 0.1
        inter_delay: 0.02
        monitor: true
      slots.Slot2.channels.Chan1.fine_volt:
        alias: Q6
        label: Q6 gate
        step: 0.1
        inter_delay: 0.02
        monitor: true
        
        
        
# 'composite' instruments


  harvard_decadac2:
    driver: qdev_wrappers.customised_instruments.Decadac_ext
    type: Decadac_ext
    address: ASRL5::INSTR
    enable_forced_reconnect: true
    init:
      min_val: -10
      max_val: 10
      terminator: \n
      timeout: 30
    parameters:
      slots.Slot0.channels.Chan0.fine_volt:
        alias: Q1
        label: Q1 gate
        step: 0.1
        inter_delay: 0.02
        monitor: true
      slots.Slot0.channels.Chan1.fine_volt:
        alias: Q2
        label: Q2 gate
        step: 0.1
        inter_delay: 0.02
        monitor: true
      slots.Slot1.channels.Chan0.fine_volt:
        alias: Q3
        label: Q3 gate
        step: 0.1
        inter_delay: 0.02
        monitor: true
      slots.Slot1.channels.Chan1.fine_volt:
        alias: Q4
        label: Q4 gate
        step: 0.1
        inter_delay: 0.02
        monitor: true
      slots.Slot2.channels.Chan0.fine_volt:
        alias: Q5
        label: Q5 gate
        step: 0.1
        inter_delay: 0.02
        monitor: true
      slots.Slot2.channels.Chan1.fine_volt:
        alias: Q6
        label: Q6 gate
        step: 0.1
        inter_delay: 0.02
        monitor: true
 
  alazar_ctrl:
    #driver: qdev_wrappers.alazar_controllers.ATSChannelController
    type: qdev_wrappers.alazar_controllers.ATSChannelController.ATSChannelController
    enable_forced_reconnect: true
    init:
      alazar_name: 'alazar'
      filter: 'ave'
      
 
  heterodyne_source_one_source:
    driver: qdev_wrappers.customised_instruments.heterodyne_source_interface
    type: OneSGS100AHeterodyneSourceInterface
    parameters:
      frequency: {initial_value: 7000000000}
      power: {initial_value: -10}
      status: {initial_value: False}

  heterodyne_source_two_sources:
    driver: qdev_wrappers.customised_instruments.heterodyne_source_interface
    type: TwoSGS100AHeterodyneSourceInterface
    parameters:
      frequency: {initial_value: 7000000000}
      power: {initial_value: -10}
      status: {initial_value: False}
      demodulation_frequency: {initial_value: 15.0e+6}
      localos_power: {initial_value: 15}

  awg_interface:
    driver: qdev_wrappers.customised_instruments.awg_interface
    type: AWG5014Interface

  spectrum_analyser_interface:
    driver: qdev_wrappers.customised_instruments.spectrum_analyser_interface
    type: SpectrumAnalyserInterface

  ps:
    driver: qdev_wrappers.customised_instruments.parametric_sequencer2
    init:
      routes:
        Q0_I: 1
        Q0_Q: 2
        readout_I: 3
        readout_Q: 4
        readout_marker: 4M1
        sequence_marker: 4M2

  switch:
    type: qdev_wrappers.customised_instruments.switch_ext.Switch_ext
    init:
      switch_confuguration:
        alazar:
          a: 2
          b: 2
          c: 2
          d: 2
        vna:
          a: 1
          b: 1
          c: 2
          d: 2
        spectrum_analyser:
          a: 2
          b: 1
          c: 2
          d: 2

  pwa:
    driver: qdev_wrappers.customised_instruments.parametric_waveform_analyser.parametric_waveform_analyser
    type: ParametricWaveformAnalyser


  keithley:
      driver: qcodes.instrument_drivers.tektronix.Keithley_2400
      type: Keithley_2400
      #force_close_existing_instrument: true
      address: GPIB0::7::INSTR
      parameters:
        curr:
          label: leakage
          alias: leakage
        volt:
          label: gate
          limits: -21, 21
          alias: gate
       




  # #keith:
  #    driver: qcodes.instrument_drivers.tektronix.Keithley_2600_channels
  #    type: Keithley_2600_channels
  #    #force_close_existing_instrument: true
  #    address: GPIB0::7::INSTR
  #    parameters:
  #      smua.curr:
  #        label: leakage_Q1
  #        alias: Q1leakage
  #      smua.volt:
  #        label: Q1 gate
  #        limits: -12, 12
  #        alias: Q1gate
  #      smub.curr:
  #        label: leakage_Q2
  #        alias: Q2leakage
  #      smub.volt:
  #        label: Q2 gate
  #        limits: -12, 12
  #        alias: Q4gate

  channelA:
    type: qdev_wrappers.alazar_controllers.alazar_channel.AlazarChannel
    enable_forced_reconnect: true
    init:
      demod: false
      integrate_samples: false
      average_buffers: True
      average_records: True
      alazar_channel: 'A'
    #init:
     # alazar_channel: 'A'
      #demod: true
      #average_buffers: true
      #average_records: false
      #integrate_samples: true
    ## demod_freq: {initial_value: 40000000, monitor: true}
     # demod_type: {initial_value: magnitude}
     # data: {label: 'f4 Readout Magnitude', unit: 'V'}      
       
  sample_mag:
    driver: qdev_wrappers.alazar_controllers.alazar_channel
    type: AlazarChannel
    enable_forced_reconnect: true
    init:
      alazar_channel: 'A'
      demod: true
      average_buffers: true
      average_records: true
      integrate_samples: false
    parameters:
      demod_freq: {initial_value: 12500000, monitor: true}
      demod_type: {initial_value: magnitude}
      data: {label: 'Readout Magnitude', unit: 'V'}
  sample_phase:
    driver: qdev_wrappers.alazar_controllers.alazar_channel
    type: AlazarChannel
    enable_forced_reconnect: true
    init:
      alazar_channel: 'A'
      demod: true
      average_buffers: true
      average_records: true
      integrate_samples: false
    parameters:
      demod_freq: {initial_value: 12500000, monitor: true}
      demod_type: {initial_value: phase}
      data: {label: 'Readout Phase', unit: 'degr.'}

  sample_rec_mag:
    driver: qdev_wrappers.alazar_controllers.alazar_channel
    type: AlazarChannel
    enable_forced_reconnect: true
    init:
      alazar_channel: 'A'
      demod: true  
      average_buffers: true
      average_records: false
      integrate_samples: false 
    parameters:
      demod_freq: {initial_value: 20e6, monitor: true}
      demod_type: {initial_value: magnitude}
      data: {label: 'Readout Magnitude', unit: 'V'}
 
  sample_rec_phase:
    driver: qdev_wrappers.alazar_controllers.alazar_channel
    type: AlazarChannel
    enable_forced_reconnect: true
    init:
      alazar_channel: 'A'
      demod: true
      average_buffers: true
      average_records: false
      integrate_samples: false 
    parameters:
      demod_freq: {initial_value: 20e6, monitor: true}
      demod_type: {initial_value: phase}
      data: {label: 'Readout Phase', unit: 'degr.'}

  avg_f1_mag:
    driver: qdev_wrappers.alazar_controllers.alazar_channel
    type: AlazarChannel
    enable_forced_reconnect: true
    init:
      alazar_channel: 'A'
      demod: true
      average_buffers: true
      average_records: true
      integrate_samples: true
    parameters:
      demod_freq: {initial_value: 12500000, monitor: true}
      demod_type: {initial_value: magnitude}
      data: {label: 'f1 Readout Magnitude', unit: 'V'}
      
  avg_f1_phase:
    driver: qdev_wrappers.alazar_controllers.alazar_channel
    type: AlazarChannel
    enable_forced_reconnect: true
    init:
      alazar_channel: 'A'
      demod: true
      average_buffers: true
      average_records: true
      integrate_samples: true
    parameters:
      demod_freq: {initial_value: 12500000, monitor: true}
      demod_type: {initial_value: phase}
      data: {label: 'f1 Readout Phase', unit: 'degr.'}

  avg_f2_mag:
    driver: qdev_wrappers.alazar_controllers.alazar_channel
    type: AlazarChannel
    enable_forced_reconnect: true
    init:
      alazar_channel: 'A'
      demod: true
      average_buffers: true
      average_records: true
      integrate_samples: true
    parameters:
      demod_freq: {initial_value: 40000000, monitor: true}
      demod_type: {initial_value: magnitude}
      data: {label: 'f2 Readout Magnitude', unit: 'V'}
  avg_f2_phase:
    driver: qdev_wrappers.alazar_controllers.alazar_channel
    type: AlazarChannel
    enable_forced_reconnect: true
    init:
      alazar_channel: 'A'
      demod: true
      average_buffers: true
      average_records: true
      integrate_samples: true
    parameters:
      demod_freq: {initial_value: 40000000, monitor: true}
      demod_type: {initial_value: phase}
      data: {label: 'f2 Readout Phase', unit: 'degr.'}

  avg_f3_mag:
    driver: qdev_wrappers.alazar_controllers.alazar_channel
    type: AlazarChannel
    enable_forced_reconnect: true
    init:
      alazar_channel: 'A'
      demod: true
      average_buffers: true
      average_records: true
      integrate_samples: true
    parameters:
      demod_freq: {initial_value: 40000000, monitor: true}
      demod_type: {initial_value: magnitude}
      data: {label: 'f3 Readout Magnitude', unit: 'V'}
  avg_f3_phase:
    driver: qdev_wrappers.alazar_controllers.alazar_channel
    type: AlazarChannel
    enable_forced_reconnect: true
    init:
      alazar_channel: 'A'
      demod: true
      average_buffers: true
      average_records: true
      integrate_samples: true
    parameters:
      demod_freq: {initial_value: 40000000, monitor: true}
      demod_type: {initial_value: imag}
      data: {label: 'f3 Readout Phase', unit: 'degr.'}

  avg_f4_mag:
    driver: qdev_wrappers.alazar_controllers.alazar_channel
    type: AlazarChannel
    enable_forced_reconnect: true
    init:
      alazar_channel: 'A'
      demod: true
      average_buffers: true
      average_records: true
      integrate_samples: true
    parameters:
      demod_freq: {initial_value: 40000000, monitor: true}
      demod_type: {initial_value: magnitude}
      data: {label: 'f4 Readout Magnitude', unit: 'V'}
  avg_f4_phase:
    driver: qdev_wrappers.alazar_controllers.alazar_channel
    type: AlazarChannel
    enable_forced_reconnect: true
    init:
      alazar_channel: 'A'
      demod: true
      average_buffers: true
      average_records: true
      integrate_samples: true
    parameters:
      demod_freq: {initial_value: 40000000, monitor: true}
      demod_type: {initial_value: phase}
      data: {label: 'f4 Readout Phase', unit: 'degr.'}


# In use

  rec_f1_mag:
    driver: qdev_wrappers.alazar_controllers.alazar_channel
    type: AlazarChannel
    enable_forced_reconnect: true
    init:
      alazar_channel: 'A'
      demod: true
#      average_buffers: false # For multibuffer measurements
      average_buffers: true
      average_records: false
      integrate_samples: true
      # buffers_per_acquisition: 2 # Temporarily added line
    parameters:
      demod_freq: {initial_value: 12500000, monitor: true}
#      demod_type: {initial_value: magnitude}
#      data: {label: 'f1 Readout Magnitude', unit: 'V'}
      demod_type: {initial_value: real}
      data: {label: 'I (In-phase)', unit: 'V'}
  
  rec_f1_phase:
    driver: qdev_wrappers.alazar_controllers.alazar_channel
    type: AlazarChannel
    enable_forced_reconnect: true
    init:
      alazar_channel: 'A'
      demod: true
#      average_buffers: false # For multibuffer measurements
      average_buffers: true
      average_records: false
      integrate_samples: true
    parameters:
      demod_freq: {initial_value: 12500000, monitor: true}
#      demod_type: {initial_value: phase}
#      data: {label: 'f1 Readout Phase', unit: 'degr.'}
      demod_type: {initial_value: imag}
      data: {label: 'Q (Quadrature)', unit: 'V'}
      
  rec_f1_complex:
    driver: qdev_wrappers.alazar_controllers.alazar_channel
    type: AlazarChannel
    enable_forced_reconnect: true
    init:
      alazar_channel: 'A'
      demod: true
      average_buffers: false # For multibuffer measurements
      average_records: false
      integrate_samples: true
    parameters:
      demod_freq: {initial_value: 12500000, monitor: true}
      demod_type: {initial_value: phase}
#      data: {label: 'f1 Readout Phase', unit: 'degr.'}
      # demod_type: {initial_value: phasor}
      data: {label: 'V_H (Complex)', unit: 'V'}
      num_averages: {initial_value: 1}

# / In use

  rec_f2_mag:
    driver: qdev_wrappers.alazar_controllers.alazar_channel
    type: AlazarChannel
    enable_forced_reconnect: true
    init:
      alazar_channel: 'A'
      demod: true
      average_buffers: true
      average_records: false
      integrate_samples: true
    parameters:
      demod_freq: {initial_value: 40000000, monitor: true}
      demod_type: {initial_value: magnitude}
      data: {label: 'f2 Readout Magnitude', unit: 'V'}
  rec_f2_phase:
    driver: qdev_wrappers.alazar_controllers.alazar_channel
    type: AlazarChannel
    enable_forced_reconnect: true
    init:
      alazar_channel: 'A'
      demod: true
      average_buffers: true
      average_records: false
      integrate_samples: true
    parameters:
      demod_freq: {initial_value: 40000000, monitor: true}
      demod_type: {initial_value: phase}
      data: {label: 'f2 Readout Phase', unit: 'degr.'}

  rec_f3_mag:
    driver: qdev_wrappers.alazar_controllers.alazar_channel
    type: AlazarChannel
    enable_forced_reconnect: true
    init:
      alazar_channel: 'A'
      demod: true
      average_buffers: true
      average_records: false
      integrate_samples: true
    parameters:
      demod_freq: {initial_value: 40000000, monitor: true}
      demod_type: {initial_value: magnitude}
      data: {label: 'f3 Readout Magnitude', unit: 'V'}
  rec_f3_phase:
    driver: qdev_wrappers.alazar_controllers.alazar_channel
    type: AlazarChannel
    enable_forced_reconnect: true
    init:
      alazar_channel: 'A'
      demod: true
      average_buffers: true
      average_records: false
      integrate_samples: true
    parameters:
      demod_freq: {initial_value: 40000000, monitor: true}
      demod_type: {initial_value: phase}
      data: {label: 'f3 Readout Phase', unit: 'degr.'}

  rec_f4_mag:
    driver: qdev_wrappers.alazar_controllers.alazar_channel
    type: AlazarChannel
    enable_forced_reconnect: true
    init:
      alazar_channel: 'A'
      demod: true
      average_buffers: true
      average_records: false
      integrate_samples: true
    parameters:
      demod_freq: {initial_value: 40000000, monitor: true}
      demod_type: {initial_value: magnitude}
      data: {label: 'f4 Readout Magnitude', unit: 'V'}
  rec_f4_phase:
    driver: qdev_wrappers.alazar_controllers.alazar_channel
    type: AlazarChannel
    enable_forced_reconnect: true
    init:
      alazar_channel: 'A'
      demod: true
      average_buffers: true
      average_records: false
      integrate_samples: true
    parameters:
      demod_freq: {initial_value: 40000000, monitor: true}
      demod_type: {initial_value: phase}
      data: {label: 'f4 Readout Phase', unit: 'degr.'}

  pulse_builder:
    driver: local_instruments.PulseBuilder_Instr
    type: MultiQ_PulseBuilder
    enable_forced_reconnect: true
    init:
      number_read_freqs: 1
    parameters:
      cycle_time: {initial_value: 8.0e-6, monitor: true}
      int_time: {initial_value: 4.5e-6, monitor: true}
      int_delay: {initial_value: 0.15e-6, monitor: true}
      readout_dur: {initial_value: 5.0e-6, monitor: true}
      marker_offset: {initial_value: 0, monitor: true}
      averages: {initial_value: 80000, monitor: true}
      readout_freq_1: {monitor: true}
  